// source: chipperpb.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.chippergrpc2.IntentResult');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.chippergrpc2.KnowledgeGraphResponse');

goog.forwardDeclare('proto.chippergrpc2.IntentService');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chippergrpc2.IntentResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chippergrpc2.IntentResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chippergrpc2.IntentResult.displayName = 'proto.chippergrpc2.IntentResult';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chippergrpc2.IntentResult.prototype.toObject = function(opt_includeInstance) {
  return proto.chippergrpc2.IntentResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chippergrpc2.IntentResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chippergrpc2.IntentResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryText: jspb.Message.getFieldWithDefault(msg, 1, ""),
    action: jspb.Message.getFieldWithDefault(msg, 2, ""),
    intentConfidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    speechConfidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    parametersMap: (f = msg.getParametersMap()) ? f.toObject(includeInstance, undefined) : [],
    allParametersPresent: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    hasContext: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    service: jspb.Message.getFieldWithDefault(msg, 8, 0),
    kgresponse: (f = msg.getKgresponse()) && proto.chippergrpc2.KnowledgeGraphResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chippergrpc2.IntentResult}
 */
proto.chippergrpc2.IntentResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chippergrpc2.IntentResult;
  return proto.chippergrpc2.IntentResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chippergrpc2.IntentResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chippergrpc2.IntentResult}
 */
proto.chippergrpc2.IntentResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryText(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setIntentConfidence(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSpeechConfidence(value);
      break;
    case 5:
      var value = msg.getParametersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllParametersPresent(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasContext(value);
      break;
    case 8:
      var value = /** @type {!proto.chippergrpc2.IntentService} */ (reader.readEnum());
      msg.setService(value);
      break;
    case 9:
      var value = new proto.chippergrpc2.KnowledgeGraphResponse;
      reader.readMessage(value,proto.chippergrpc2.KnowledgeGraphResponse.deserializeBinaryFromReader);
      msg.setKgresponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chippergrpc2.IntentResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chippergrpc2.IntentResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chippergrpc2.IntentResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chippergrpc2.IntentResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIntentConfidence();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getSpeechConfidence();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getParametersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getAllParametersPresent();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getHasContext();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getService();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getKgresponse();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.chippergrpc2.KnowledgeGraphResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional string query_text = 1;
 * @return {string}
 */
proto.chippergrpc2.IntentResult.prototype.getQueryText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.chippergrpc2.IntentResult} returns this
 */
proto.chippergrpc2.IntentResult.prototype.setQueryText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string action = 2;
 * @return {string}
 */
proto.chippergrpc2.IntentResult.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.chippergrpc2.IntentResult} returns this
 */
proto.chippergrpc2.IntentResult.prototype.setAction = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float intent_confidence = 3;
 * @return {number}
 */
proto.chippergrpc2.IntentResult.prototype.getIntentConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.chippergrpc2.IntentResult} returns this
 */
proto.chippergrpc2.IntentResult.prototype.setIntentConfidence = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float speech_confidence = 4;
 * @return {number}
 */
proto.chippergrpc2.IntentResult.prototype.getSpeechConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.chippergrpc2.IntentResult} returns this
 */
proto.chippergrpc2.IntentResult.prototype.setSpeechConfidence = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * map<string, string> parameters = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.chippergrpc2.IntentResult.prototype.getParametersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.chippergrpc2.IntentResult} returns this
 */
proto.chippergrpc2.IntentResult.prototype.clearParametersMap = function() {
  this.getParametersMap().clear();
  return this;};


/**
 * optional bool all_parameters_present = 6;
 * @return {boolean}
 */
proto.chippergrpc2.IntentResult.prototype.getAllParametersPresent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.chippergrpc2.IntentResult} returns this
 */
proto.chippergrpc2.IntentResult.prototype.setAllParametersPresent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool has_context = 7;
 * @return {boolean}
 */
proto.chippergrpc2.IntentResult.prototype.getHasContext = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.chippergrpc2.IntentResult} returns this
 */
proto.chippergrpc2.IntentResult.prototype.setHasContext = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional IntentService service = 8;
 * @return {!proto.chippergrpc2.IntentService}
 */
proto.chippergrpc2.IntentResult.prototype.getService = function() {
  return /** @type {!proto.chippergrpc2.IntentService} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.chippergrpc2.IntentService} value
 * @return {!proto.chippergrpc2.IntentResult} returns this
 */
proto.chippergrpc2.IntentResult.prototype.setService = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional KnowledgeGraphResponse kgresponse = 9;
 * @return {?proto.chippergrpc2.KnowledgeGraphResponse}
 */
proto.chippergrpc2.IntentResult.prototype.getKgresponse = function() {
  return /** @type{?proto.chippergrpc2.KnowledgeGraphResponse} */ (
    jspb.Message.getWrapperField(this, proto.chippergrpc2.KnowledgeGraphResponse, 9));
};


/**
 * @param {?proto.chippergrpc2.KnowledgeGraphResponse|undefined} value
 * @return {!proto.chippergrpc2.IntentResult} returns this
*/
proto.chippergrpc2.IntentResult.prototype.setKgresponse = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chippergrpc2.IntentResult} returns this
 */
proto.chippergrpc2.IntentResult.prototype.clearKgresponse = function() {
  return this.setKgresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chippergrpc2.IntentResult.prototype.hasKgresponse = function() {
  return jspb.Message.getField(this, 9) != null;
};


